(undo-tree-save-format-version . 1)
"2fc7110c1b72c3966a971d8addef2928e2a8806b"
[nil nil nil nil (26291 48111 339423 157000) 0 nil]
([nil nil ((#("
" 0 1 (fontified t)) . 336) (t 26291 47054 719846 45000)) nil (26291 48111 339412 580000) 0 nil])
([nil nil ((apply 678 12838 32725 undo--wrap-and-run-primitive-undo 12838 32725 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32710) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32669) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32629) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32566) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32503) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32479) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32437) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32339) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32270) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32174) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32104) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -32010) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31919) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31874) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31842) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31810) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31696) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31580) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31551) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31507) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31493) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31425) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31376) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31297) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31272) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31236) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31180) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31154) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31123) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -31061) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30993) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30948) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30934) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30865) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30816) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30736) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30711) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30675) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30618) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30591) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30559) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30495) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30426) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30381) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30289) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30204) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30135) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -30090) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29996) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29909) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29832) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29761) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29733) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29668) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29636) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29603) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29525) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29450) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29374) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29338) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29276) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29245) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29221) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29175) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29158) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29124) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29052) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -29024) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28936) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28910) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28884) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28779) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28732) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28649) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28561) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28485) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28472) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28419) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28365) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28332) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28303) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28261) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28224) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28175) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28114) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28082) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -28022) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27962) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27899) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27847) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27802) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27766) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27717) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27656) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27598) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27512) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27471) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27453) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27398) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27310) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27237) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27193) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27108) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27068) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -27047) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26992) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26905) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26832) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26788) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26741) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26661) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26585) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26530) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26409) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26368) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26249) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26209) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26133) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26072) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26048) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26025) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -26002) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25978) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25948) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25941) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25861) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25780) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25731) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25683) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25589) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25570) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25531) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25431) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25366) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25343) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25275) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25206) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25140) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25082) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25034) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -25004) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24944) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24858) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24852) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24747) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24705) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24632) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24583) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24548) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24468) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24375) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24331) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24322) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24303) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24284) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24231) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24178) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24126) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24083) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -24037) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23922) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23916) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23897) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23878) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23825) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23772) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23720) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23678) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23633) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23521) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23503) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23447) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23390) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23334) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23294) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23190) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23176) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23126) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23096) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -23054) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -22923) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -22878) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -22786) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -22711) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -22675) (#("# " 0 2 (fontified nil)) . -22623) (#("# " 0 2 (fontified nil)) . -22593) (#("# " 0 2 (fontified nil)) . -22566) (#("# " 0 2 (fontified nil)) . -22526) (#("# " 0 2 (fontified nil)) . -22491) (#("# " 0 2 (fontified nil)) . -22442) (#("# " 0 2 (fontified nil)) . -22333) (#("# " 0 2 (fontified nil)) . -22260) (#("# " 0 2 (fontified nil)) . -22153) (#("# " 0 2 (fontified nil)) . -22073) (#("# " 0 2 (fontified nil)) . -21966) (#("# " 0 2 (fontified nil)) . -21886) (#("# " 0 2 (fontified nil)) . -21780) (#("# " 0 2 (fontified nil)) . -21707) (#("# " 0 2 (fontified nil)) . -21605) (#("# " 0 2 (fontified nil)) . -21546) (#("# " 0 2 (fontified nil)) . -21514) (#("# " 0 2 (fontified nil)) . -21454) (#("# " 0 2 (fontified nil)) . -21400) (#("# " 0 2 (fontified nil)) . -21318) (#("# " 0 2 (fontified nil)) . -21223) (#("# " 0 2 (fontified nil)) . -21152) (#("# " 0 2 (fontified nil)) . -21123) (#("# " 0 2 (fontified nil)) . -21109) (#("# " 0 2 (fontified nil)) . -21082) (#("# " 0 2 (fontified nil)) . -21050) (#("# " 0 2 (fontified nil)) . -21021) (#("# " 0 2 (fontified nil)) . -20992) (#("# " 0 2 (fontified nil)) . -20940) (#("# " 0 2 (fontified nil)) . -20856) (#("# " 0 2 (fontified nil)) . -20775) (#("# " 0 2 (fontified nil)) . -20716) (#("# " 0 2 (fontified nil)) . -20653) (#("# " 0 2 (fontified nil)) . -20601) (#("# " 0 2 (fontified nil)) . -20556) (#("# " 0 2 (fontified nil)) . -20520) (#("# " 0 2 (fontified nil)) . -20471) (#("# " 0 2 (fontified nil)) . -20410) (#("# " 0 2 (fontified nil)) . -20352) (#("# " 0 2 (fontified nil)) . -20268) (#("# " 0 2 (fontified nil)) . -20227) (#("# " 0 2 (fontified nil)) . -20205) (#("# " 0 2 (fontified nil)) . -20152) (#("# " 0 2 (fontified nil)) . -20064) (#("# " 0 2 (fontified nil)) . -19987) (#("# " 0 2 (fontified nil)) . -19943) (#("# " 0 2 (fontified nil)) . -19859) (#("# " 0 2 (fontified nil)) . -19819) (#("# " 0 2 (fontified nil)) . -19798) (#("# " 0 2 (fontified nil)) . -19744) (#("# " 0 2 (fontified nil)) . -19657) (#("# " 0 2 (fontified nil)) . -19584) (#("# " 0 2 (fontified nil)) . -19540) (#("# " 0 2 (fontified nil)) . -19493) (#("# " 0 2 (fontified nil)) . -19414) (#("# " 0 2 (fontified nil)) . -19338) (#("# " 0 2 (fontified nil)) . -19283) (#("# " 0 2 (fontified nil)) . -19162) (#("# " 0 2 (fontified nil)) . -19121) (#("# " 0 2 (fontified nil)) . -19002) (#("# " 0 2 (fontified nil)) . -18962) (#("# " 0 2 (fontified nil)) . -18886) (#("# " 0 2 (fontified nil)) . -18825) (#("# " 0 2 (fontified nil)) . -18801) (#("# " 0 2 (fontified nil)) . -18778) (#("# " 0 2 (fontified nil)) . -18755) (#("# " 0 2 (fontified nil)) . -18731) (#("# " 0 2 (fontified nil)) . -18701) (#("# " 0 2 (fontified nil)) . -18694) (#("# " 0 2 (fontified nil)) . -18614) (#("# " 0 2 (fontified nil)) . -18533) (#("# " 0 2 (fontified nil)) . -18484) (#("# " 0 2 (fontified nil)) . -18436) (#("# " 0 2 (fontified nil)) . -18342) (#("# " 0 2 (fontified nil)) . -18323) (#("# " 0 2 (fontified nil)) . -18284) (#("# " 0 2 (fontified nil)) . -18184) (#("# " 0 2 (fontified nil)) . -18112) (#("# " 0 2 (fontified nil)) . -18089) (#("# " 0 2 (fontified nil)) . -18021) (#("# " 0 2 (fontified nil)) . -17952) (#("# " 0 2 (fontified nil)) . -17886) (#("# " 0 2 (fontified nil)) . -17830) (#("# " 0 2 (fontified nil)) . -17782) (#("# " 0 2 (fontified nil)) . -17754) (#("# " 0 2 (fontified nil)) . -17694) (#("# " 0 2 (fontified nil)) . -17641) (#("# " 0 2 (fontified nil)) . -17530) (#("# " 0 2 (fontified nil)) . -17493) (#("# " 0 2 (fontified nil)) . -17441) (#("# " 0 2 (fontified nil)) . -17338) (#("# " 0 2 (fontified nil)) . -17305) (#("# " 0 2 (fontified nil)) . -17217) (#("# " 0 2 (fontified nil)) . -17134) (#("# " 0 2 (fontified nil)) . -17067) (#("# " 0 2 (fontified nil)) . -17021) (#("# " 0 2 (fontified nil)) . -16970) (#("# " 0 2 (fontified nil)) . -16900) (#("# " 0 2 (fontified nil)) . -16873) (#("# " 0 2 (fontified nil)) . -16825) (#("# " 0 2 (fontified nil)) . -16745) (#("# " 0 2 (fontified nil)) . -16693) (#("# " 0 2 (fontified nil)) . -16621) (#("# " 0 2 (fontified nil)) . -16542) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16421) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16333) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16223) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16217) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16101) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16068) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15981) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15889) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15845) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15837) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15818) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15799) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15746) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15693) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15641) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15598) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15552) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15437) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15431) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15412) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15393) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15340) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15287) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15235) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15193) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15148) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15036) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -15018) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14962) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14905) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14849) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14809) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14705) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14691) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14641) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14611) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14569) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14438) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14393) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14301) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14198) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14140) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14129) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -14087) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -13874) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -13431) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -13142) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -12909) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -12869) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -12842) 33403))) nil (26292 50200 43528 966000) 0 nil])
([nil nil ((#("



" 0 3 (fontified t) 3 4 (fontified t)) . 32891) (undo-tree-id0 . -3) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (#(" " 0 1 (ws-butler-chg chg face tree-sitter-hl-face:comment)) . 13424) (#(" " 0 1 (ws-butler-chg chg face tree-sitter-hl-face:comment)) . 13136) 32724) nil (26292 50200 43525 671000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg delete fontified t)) . 29416) (#("n" 0 1 (ws-butler-chg delete fontified t)) . 29416) (#("a" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 29416) (t 26292 50200 41832 62000)) nil (26292 50221 183327 735000) 0 nil])
([nil nil ((29416 . 29417)) nil (26292 50221 183327 47000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -29489) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("n" 0 1 (fontified t)) . -29490) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("d" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -29491) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 29492) nil (26292 50221 183323 354000) 0 nil])
([nil nil ((29489 . 29490)) nil (26292 50221 182800 390000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15838) (t 26292 50221 181832 691000)) nil (26292 51164 355825 475000) 0 nil])
([nil nil ((3827 . 3831) (t 26292 51164 353860 760000)) nil (26292 51335 724203 469000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 3827) (undo-tree-id274 . -4) 32721) nil (26292 51336 820393 877000) 0 nil] [nil nil ((#("    x = np.linspace(0, 1, 100)

    # Disegna le curve di adattamento probit
    axes.plot(x, probit(x, *pars_off), label='Off' ,color='black', alpha=0.5, linewidth=3)
    axes.plot(x, probit(x, *pars_on), label='On', color='steelblue', alpha=0.5, linewidth=3)

    # Disegna lo scatter plot delle frequenze calcolate per Light Off
    axes.scatter(probs_off, right_choice_freq_off, marker='o', color='black', alpha=0.5, s=10)

    # Disegna lo scatter plot delle frequenze calcolate per Light On
    axes.scatter(probs_on, right_choice_freq_on, marker='o', color='steelblue', alpha=0.5, s=10)

    # Impostazioni aggiuntive del grafico
    axes.set_ylim(0, 1)
    axes.axhline(0.5, color='gray', linestyle='--', alpha=0.3)
    axes.axvline(0.5, color='gray', linestyle='--', alpha=0.3)
    axes.set_xlabel('Probability Type')
    axes.set_ylabel('Right Choice Rate')
    axes.legend()
" 0 1 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 4 5 (face tree-sitter-hl-face:variable fontified t) 5 6 (fontified t) 6 7 (face tree-sitter-hl-face:operator fontified t) 7 11 (fontified t) 11 19 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (face tree-sitter-hl-face:number fontified t) 21 23 (fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 26 (fontified t) 26 29 (face tree-sitter-hl-face:number fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 33 34 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 34 35 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 35 36 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 36 76 (face tree-sitter-hl-face:comment fontified t) 76 77 (fontified t) 77 78 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 78 79 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 79 80 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 80 81 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 81 86 (fontified t) 86 90 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 90 91 (face (rainbow-delimiters-depth-1-face) fontified t) 91 94 (fontified t) 94 100 (face tree-sitter-hl-face:function.call fontified t) 100 101 (face (rainbow-delimiters-depth-2-face) fontified t) 101 104 (fontified t) 104 105 (face tree-sitter-hl-face:operator fontified t) 105 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) fontified t) 114 116 (fontified t) 116 121 (face tree-sitter-hl-face:label fontified t) 121 122 (face tree-sitter-hl-face:operator fontified t) 122 127 (face tree-sitter-hl-face:string fontified t) 127 129 (fontified t) 129 134 (face tree-sitter-hl-face:label fontified t) 134 135 (face tree-sitter-hl-face:operator fontified t) 135 142 (face tree-sitter-hl-face:string fontified t) 142 144 (fontified t) 144 149 (face tree-sitter-hl-face:label fontified t) 149 150 (face tree-sitter-hl-face:operator fontified t) 150 153 (face tree-sitter-hl-face:number fontified t) 153 155 (fontified t) 155 164 (face tree-sitter-hl-face:label fontified t) 164 165 (face tree-sitter-hl-face:operator fontified t) 165 166 (face tree-sitter-hl-face:number fontified t) 166 167 (face (rainbow-delimiters-depth-1-face) fontified t) 167 168 (fontified t) 168 169 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 169 170 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 170 171 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 171 172 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 172 177 (fontified t) 177 181 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 185 (fontified t) 185 191 (face tree-sitter-hl-face:function.call fontified t) 191 192 (face (rainbow-delimiters-depth-2-face) fontified t) 192 195 (fontified t) 195 196 (face tree-sitter-hl-face:operator fontified t) 196 203 (fontified t) 203 204 (face (rainbow-delimiters-depth-2-face) fontified t) 204 206 (fontified t) 206 211 (face tree-sitter-hl-face:label fontified t) 211 212 (face tree-sitter-hl-face:operator fontified t) 212 216 (face tree-sitter-hl-face:string fontified t) 216 218 (fontified t) 218 223 (face tree-sitter-hl-face:label fontified t) 223 224 (face tree-sitter-hl-face:operator fontified t) 224 235 (face tree-sitter-hl-face:string fontified t) 235 237 (fontified t) 237 242 (face tree-sitter-hl-face:label fontified t) 242 243 (face tree-sitter-hl-face:operator fontified t) 243 246 (face tree-sitter-hl-face:number fontified t) 246 248 (fontified t) 248 257 (face tree-sitter-hl-face:label fontified t) 257 258 (face tree-sitter-hl-face:operator fontified t) 258 259 (face tree-sitter-hl-face:number fontified t) 259 260 (face (rainbow-delimiters-depth-1-face) fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 263 264 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 264 265 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 265 266 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 266 331 (face tree-sitter-hl-face:comment fontified t) 331 332 (fontified t) 332 333 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 333 334 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 334 335 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 335 336 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 336 341 (fontified t) 341 348 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 348 349 (face (rainbow-delimiters-depth-1-face) fontified t) 349 383 (fontified t) 383 389 (face tree-sitter-hl-face:label fontified t) 389 390 (face tree-sitter-hl-face:operator fontified t) 390 393 (face tree-sitter-hl-face:string fontified t) 393 395 (fontified t) 395 400 (face tree-sitter-hl-face:label fontified t) 400 401 (face tree-sitter-hl-face:operator fontified t) 401 408 (face tree-sitter-hl-face:string fontified t) 408 410 (fontified t) 410 415 (face tree-sitter-hl-face:label fontified t) 415 416 (face tree-sitter-hl-face:operator fontified t) 416 419 (face tree-sitter-hl-face:number fontified t) 419 421 (fontified t) 421 422 (face tree-sitter-hl-face:label fontified t) 422 423 (face tree-sitter-hl-face:operator fontified t) 423 425 (face tree-sitter-hl-face:number fontified t) 425 426 (face (rainbow-delimiters-depth-1-face) fontified t) 426 427 (fontified t) 427 428 (fontified t) 428 429 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 429 430 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 430 431 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 431 432 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 432 496 (face tree-sitter-hl-face:comment fontified t) 496 497 (fontified t) 497 498 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 498 499 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 499 500 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 500 501 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 501 506 (fontified t) 506 513 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 513 514 (face (rainbow-delimiters-depth-1-face) fontified t) 514 546 (fontified t) 546 552 (face tree-sitter-hl-face:label fontified t) 552 553 (face tree-sitter-hl-face:operator fontified t) 553 556 (face tree-sitter-hl-face:string fontified t) 556 558 (fontified t) 558 563 (face tree-sitter-hl-face:label fontified t) 563 564 (face tree-sitter-hl-face:operator fontified t) 564 575 (face tree-sitter-hl-face:string fontified t) 575 577 (fontified t) 577 582 (face tree-sitter-hl-face:label fontified t) 582 583 (face tree-sitter-hl-face:operator fontified t) 583 586 (face tree-sitter-hl-face:number fontified t) 586 588 (fontified t) 588 589 (face tree-sitter-hl-face:label fontified t) 589 590 (face tree-sitter-hl-face:operator fontified t) 590 592 (face tree-sitter-hl-face:number fontified t) 592 593 (face (rainbow-delimiters-depth-1-face) fontified t) 593 595 (fontified t) 595 596 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 596 597 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 597 598 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 598 599 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 599 636 (face tree-sitter-hl-face:comment fontified t) 636 637 (fontified t) 637 638 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 638 639 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 639 640 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 640 641 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 641 646 (fontified t) 646 654 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 654 655 (face (rainbow-delimiters-depth-1-face) fontified t) 655 656 (face tree-sitter-hl-face:number fontified t) 656 658 (fontified t) 658 659 (face tree-sitter-hl-face:number fontified t) 659 660 (face (rainbow-delimiters-depth-1-face) fontified t) 660 661 (fontified t) 661 662 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 662 663 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 663 664 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 664 665 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 665 670 (fontified t) 670 677 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 677 678 (face (rainbow-delimiters-depth-1-face) fontified t) 678 681 (face tree-sitter-hl-face:number fontified t) 681 683 (fontified t) 683 688 (face tree-sitter-hl-face:label fontified t) 688 689 (face tree-sitter-hl-face:operator fontified t) 689 695 (face tree-sitter-hl-face:string fontified t) 695 697 (fontified t) 697 706 (face tree-sitter-hl-face:label fontified t) 706 707 (face tree-sitter-hl-face:operator fontified t) 707 711 (face tree-sitter-hl-face:string fontified t) 711 713 (fontified t) 713 718 (face tree-sitter-hl-face:label fontified t) 718 719 (face tree-sitter-hl-face:operator fontified t) 719 722 (face tree-sitter-hl-face:number fontified t) 722 723 (face (rainbow-delimiters-depth-1-face) fontified t) 723 724 (fontified t) 724 725 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 725 726 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 726 727 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 727 728 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 728 733 (fontified t) 733 740 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 740 741 (face (rainbow-delimiters-depth-1-face) fontified t) 741 744 (face tree-sitter-hl-face:number fontified t) 744 746 (fontified t) 746 751 (face tree-sitter-hl-face:label fontified t) 751 752 (face tree-sitter-hl-face:operator fontified t) 752 758 (face tree-sitter-hl-face:string fontified t) 758 760 (fontified t) 760 769 (face tree-sitter-hl-face:label fontified t) 769 770 (face tree-sitter-hl-face:operator fontified t) 770 774 (face tree-sitter-hl-face:string fontified t) 774 776 (fontified t) 776 781 (face tree-sitter-hl-face:label fontified t) 781 782 (face tree-sitter-hl-face:operator fontified t) 782 785 (face tree-sitter-hl-face:number fontified t) 785 786 (face (rainbow-delimiters-depth-1-face) fontified t) 786 787 (fontified t) 787 788 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 788 789 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 789 790 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 790 791 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 791 796 (fontified t) 796 806 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 806 807 (face (rainbow-delimiters-depth-1-face) fontified t) 807 825 (face tree-sitter-hl-face:string fontified t) 825 826 (face (rainbow-delimiters-depth-1-face) fontified t) 826 827 (fontified t) 827 828 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 828 829 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 829 830 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 830 831 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 831 836 (fontified t) 836 846 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 846 847 (face (rainbow-delimiters-depth-1-face) fontified t) 847 866 (face tree-sitter-hl-face:string fontified t) 866 867 (face (rainbow-delimiters-depth-1-face) fontified t) 867 868 (fontified t) 868 869 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 869 870 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 870 871 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 871 872 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 336 in S4_5_opto.py> . #<marker at 32926 in S4_5_opto.py>)))) 872 877 (fontified t) 877 883 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 883 884 (face (rainbow-delimiters-depth-1-face) fontified t) 884 885 (face (rainbow-delimiters-depth-1-face) fontified t) 885 886 (fontified t)) . 31835) (undo-tree-id156 . -661) (undo-tree-id157 . -661) (undo-tree-id158 . -886) (undo-tree-id159 . -886) (undo-tree-id160 . -886) (undo-tree-id161 . -886) (undo-tree-id162 . -886) (undo-tree-id163 . -886) (undo-tree-id164 . -886) (undo-tree-id165 . -497) (undo-tree-id166 . -237) (undo-tree-id167 . -32) (undo-tree-id168 . -237) (undo-tree-id169 . -237) (undo-tree-id170 . -237) (undo-tree-id171 . -237) (undo-tree-id172 . -237) (undo-tree-id173 . -261) (undo-tree-id174 . -237) (undo-tree-id175 . -261) (undo-tree-id176 . -261) (undo-tree-id177 . -261) (undo-tree-id178 . -261) (undo-tree-id179 . -262) (undo-tree-id180 . -261) (undo-tree-id181 . -332) (undo-tree-id182 . -261) (undo-tree-id183 . -401) (undo-tree-id184 . -261) (undo-tree-id185 . -427) (undo-tree-id186 . -261) (undo-tree-id187 . -428) (undo-tree-id188 . -261) (undo-tree-id189 . -428) (undo-tree-id190 . -428) (undo-tree-id191 . -428) (undo-tree-id192 . -497) (undo-tree-id193 . -428) (undo-tree-id194 . -497) (undo-tree-id195 . -497) (undo-tree-id196 . -497) (undo-tree-id197 . -566) (undo-tree-id198 . -497) (undo-tree-id199 . -566) (undo-tree-id200 . -566) (undo-tree-id201 . -566) (undo-tree-id202 . -566) (undo-tree-id203 . -594) (undo-tree-id204 . -566) (undo-tree-id205 . -594) (undo-tree-id206 . -594) (undo-tree-id207 . -594) (undo-tree-id208 . -594) (undo-tree-id209 . -595) (undo-tree-id210 . -594) (undo-tree-id211 . -595) (undo-tree-id212 . -595) (undo-tree-id213 . -595) (undo-tree-id214 . -595) (undo-tree-id215 . -595) (undo-tree-id216 . -595) (undo-tree-id217 . -595) (undo-tree-id218 . -595) (undo-tree-id219 . -595) (undo-tree-id220 . -595) (undo-tree-id221 . -595) (undo-tree-id222 . -595) (undo-tree-id223 . -637) (undo-tree-id224 . -595) (undo-tree-id225 . -637) (undo-tree-id226 . -637) (undo-tree-id227 . -637) (undo-tree-id228 . -661) (undo-tree-id229 . -637) (undo-tree-id230 . -724) (undo-tree-id231 . -637) (undo-tree-id232 . -787) (undo-tree-id233 . -637) (undo-tree-id234 . -827) (undo-tree-id235 . -637) (undo-tree-id236 . -868) (undo-tree-id237 . -637) (undo-tree-id238 . -868) (undo-tree-id239 . -868) (undo-tree-id240 . -868) (undo-tree-id241 . -868) (undo-tree-id242 . -868) (undo-tree-id243 . -868) (undo-tree-id244 . -868) (undo-tree-id245 . -868) (undo-tree-id246 . -868) (undo-tree-id247 . -868) (undo-tree-id248 . -868) (undo-tree-id249 . -868) (undo-tree-id250 . -868) (undo-tree-id251 . -868) (undo-tree-id252 . -868) (undo-tree-id253 . -868) (undo-tree-id254 . -868) (undo-tree-id255 . -868) (undo-tree-id256 . -886) (undo-tree-id257 . -886) (undo-tree-id258 . -868) (undo-tree-id259 . -886) (undo-tree-id260 . -886) (undo-tree-id261 . -886) (undo-tree-id262 . -886) (undo-tree-id263 . -886) (undo-tree-id264 . -886) (undo-tree-id265 . -886) (undo-tree-id266 . -886) (undo-tree-id267 . -886) (undo-tree-id268 . -886) (undo-tree-id269 . -886) (undo-tree-id270 . -886) (undo-tree-id271 . -886) (undo-tree-id272 . -886) (undo-tree-id273 . -886) 32721) ((nil ws-butler-chg delete 32721 . 32722) (31835 . 32721)) (26292 51335 721675 80000) 0 nil])
([nil nil ((26064 . 26069) (t 26292 51336 821865 892000)) nil (26292 51886 440024 168000) 0 nil])
nil
([nil nil ((24850 . 24855)) nil (26292 51886 440023 619000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26743)) nil (26292 51886 440023 330000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28175) (undo-tree-id307 . -1)) nil (26292 51886 440022 786000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 28175)) nil (26292 51886 440021 893000) 0 nil])
([nil nil ((28472 . 28473)) nil (26292 51886 440021 536000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -28471) (undo-tree-id306 . -1) 28472) nil (26292 51886 440021 94000) 0 nil])
([nil nil ((#("3" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -22674) (undo-tree-id305 . -1) 22675) nil (26292 51886 440019 792000) 0 nil])
([nil nil ((22674 . 22675)) nil (26292 51886 440018 880000) 0 nil])
([nil nil ((16534 . 16539)) nil (26292 51886 440018 509000) 0 nil])
([nil nil ((16539 . 16545)) nil (26292 51886 440018 160000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -16544) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) 16545) nil (26292 51886 440017 301000) 0 nil])
([nil nil ((16544 . 16547)) nil (26292 51886 439998 526000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg)) . 26079) (undo-tree-id275 . -4) (#("    " 0 4 (ws-butler-chg chg)) . 24864) 16547) nil (26292 51886 439995 380000) 0 nil])
([nil nil ((16534 . 16539) (t 26292 51886 441882 249000)) nil (26292 51898 337781 50000) 0 nil])
([nil nil ((16540 . 16542) (#("\"" 0 1 (ws-butler-chg chg fontified nil)) . -16540) (16539 . 16541)) nil (26292 51898 337780 425000) 0 nil])
([nil nil ((#("\"" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified nil)) . -16540) (undo-tree-id312 . -1) (#("\"" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . 16541)) nil (26292 51898 337779 757000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -16539) (undo-tree-id311 . -1) 16540) nil (26292 51898 337778 561000) 0 nil])
([nil nil ((16539 . 16548)) nil (26292 51898 337777 511000) 0 nil])
([nil nil ((16548 . 16553)) nil (26292 51898 337777 80000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -16549) (undo-tree-id310 . -4) 16553) nil (26292 51898 337776 691000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -16548) (undo-tree-id309 . -1) 16549) nil (26292 51898 337775 445000) 0 nil])
([nil nil ((16561 . 16566)) nil (26292 51898 337773 518000) 0 nil])
([nil nil ((16566 . 16576)) nil (26292 51898 337772 818000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -16575) (undo-tree-id308 . -1) 16576) nil (26292 51898 337769 710000) 0 nil])
([nil nil ((16575 . 16580) (t 26292 51898 337882 603000)) nil (26292 52058 532657 843000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 16576)) nil (26292 52175 732355 271000) 0 nil])
([nil nil ((29372 . 29373) (t 26292 52175 733890 858000)) nil (26292 54376 90605 746000) 0 nil])
([nil current ((#("v" 0 1 (ws-butler-chg chg fontified t)) . -29372) (undo-tree-id313 . -1) 29373) nil (26292 55250 493122 433000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 32795) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (t 26292 54376 89956 340000)) ((nil ws-butler-chg delete 32796 . 32797) (32795 . 32796)) (26292 55250 490386 145000) 0 nil])
nil
