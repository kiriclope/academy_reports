(undo-tree-save-format-version . 1)
"759061adcf437f90fbc1a76abaf8098b6e7afadd"
[nil nil nil nil (26292 57026 136304 983000) 0 nil]
([nil nil ((116 . 134) (t 26292 36872 0 0)) nil (26292 57026 136303 854000) 0 nil])
([nil nil ((#("
















" 0 17 (fontified nil)) . 6793) (undo-tree-id0 . -16) (undo-tree-id1 . -16) (undo-tree-id2 . -16) (undo-tree-id3 . -16) 134) nil (26292 57026 136299 489000) 0 nil])
([nil nil ((248 . 252) (t 26292 57026 134035 204000)) nil (26292 57182 295814 647000) 0 nil])
([nil nil ((249 . 253) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 248) (undo-tree-id55 . -4) (252 . 253)) nil (26292 57182 295813 586000) 0 nil])
([nil nil ((253 . 257)) nil (26292 57182 295811 498000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -256) (undo-tree-id54 . -1) 257) nil (26292 57182 295810 773000) 0 nil])
([nil nil ((256 . 257)) nil (26292 57182 295809 353000) 0 nil])
([nil nil ((258 . 266) (#("    " 0 1 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>)))) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>))))) . 258)) nil (26292 57182 295808 460000) 0 nil])
([nil nil ((300 . 308) (#("    " 0 1 (face highlight-indent-guides-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>)))) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 183 in water_calibration.py> . #<marker at 6935 in water_calibration.py>))))) . 300) 308) nil (26292 57182 295807 639000) 0 nil])
([nil nil ((330 . 338)) nil (26292 57182 295806 631000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -334) (undo-tree-id53 . -4) 338) nil (26292 57182 295805 848000) 0 nil])
([nil nil ((334 . 341)) nil (26292 57182 295804 473000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -340) (undo-tree-id52 . -1) 341) nil (26292 57182 295803 615000) 0 nil])
([nil nil ((340 . 341)) nil (26292 57182 295802 205000) 0 nil])
([nil nil ((341 . 350)) nil (26292 57182 295801 495000) 0 nil])
([nil nil ((350 . 354)) nil (26292 57182 295800 887000) 0 nil])
([nil nil ((341 . 350)) nil (26292 57182 295800 222000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . 357) (356 . 357) (355 . 357) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -355) (350 . 356)) nil (26292 57182 295799 558000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string ws-butler-chg chg fontified nil)) . 358) (357 . 358) (356 . 358) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . -356) (356 . 357)) nil (26292 57182 295798 350000) 0 nil])
([nil nil ((#("'" 0 1 (ws-butler-chg chg fontified t)) . -356) (undo-tree-id50 . -1) (#("'" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -357) (undo-tree-id51 . -1) 358) nil (26292 57182 295796 946000) 0 nil])
([nil nil ((#("\"" 0 1 (syntax-table (15) face tree-sitter-hl-face:string ws-butler-chg chg fontified nil)) . 358) (357 . 358) (356 . 358) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . -356) (356 . 357)) nil (26292 57182 295794 530000) 0 nil])
([nil nil ((357 . 363)) nil (26292 57182 295793 49000) 0 nil])
([nil nil ((#("O" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -361) (undo-tree-id48 . -1) (#("G" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -362) (undo-tree-id49 . -1) 363) nil (26292 57182 295792 121000) 0 nil])
([nil nil ((361 . 367)) nil (26292 57182 295790 110000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -366) (undo-tree-id47 . -1) 367) nil (26292 57182 295788 793000) 0 nil])
([nil nil ((366 . 378)) nil (26292 57182 295787 295000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -373) (undo-tree-id42 . -1) (#("m" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -374) (undo-tree-id43 . -1) (#("b" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -375) (undo-tree-id44 . -1) (#("e" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -376) (undo-tree-id45 . -1) (#("r" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -377) (undo-tree-id46 . -1) 378) nil (26292 57182 295786 188000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -372) (undo-tree-id41 . -1) 373) nil (26292 57182 295781 607000) 0 nil])
([nil nil ((372 . 378)) nil (26292 57182 295780 281000) 0 nil])
([nil nil ((368 . 369)) nil (26292 57182 295779 517000) 0 nil])
([nil nil ((372 . 373)) nil (26292 57182 295778 910000) 0 nil])
([nil nil ((364 . 365)) nil (26292 57182 295778 265000) 0 nil])
([nil nil ((#("N" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -366) (undo-tree-id39 . -1) (#("O" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -367) (undo-tree-id40 . -1) 368) nil (26292 57182 295777 469000) 0 nil])
([nil nil ((366 . 372)) nil (26292 57182 295775 426000) 0 nil])
([nil nil ((372 . 375)) nil (26292 57182 295774 761000) 0 nil])
([nil nil ((#("d" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -366) (undo-tree-id37 . -1) (#("f" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -367) (undo-tree-id38 . -1) 368) nil (26292 57182 295773 946000) 0 nil])
([nil nil ((366 . 369)) nil (26292 57182 295772 368000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -368) (undo-tree-id36 . -1) 369) nil (26292 57182 295771 657000) 0 nil])
([nil nil ((368 . 370)) nil (26292 57182 295770 465000) 0 nil])
([nil nil ((#("." 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -369) (undo-tree-id35 . -1) 370) nil (26292 57182 295769 592000) 0 nil])
([nil nil ((366 . 367)) nil (26292 57182 295768 235000) 0 nil])
([nil nil ((392 . 401)) nil (26292 57182 295767 552000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . 408) (407 . 408) (406 . 408) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -406) (401 . 407)) nil (26292 57182 295766 723000) 0 nil])
([nil nil ((407 . 421)) nil (26292 57182 295765 413000) 0 nil])
([nil nil ((407 . 409) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . -407) (407 . 408)) nil (26292 57182 295764 623000) 0 nil])
([nil nil ((423 . 424)) nil (26292 57182 295763 602000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string ws-butler-chg chg fontified t)) . -408) (undo-tree-id34 . -1) 409) nil (26292 57182 295762 727000) 0 nil])
([nil nil ((422 . 424)) nil (26292 57182 295760 981000) 0 nil])
([nil nil ((426 . 435)) nil (26292 57182 295760 452000) 0 nil])
([nil nil ((435 . 438)) nil (26292 57182 295759 772000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -437) (undo-tree-id33 . -1) 438) nil (26292 57182 295758 709000) 0 nil])
([nil nil ((437 . 443)) nil (26292 57182 295756 985000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number ws-butler-chg chg fontified t)) . -442) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 443) nil (26292 57182 295753 420000) 0 nil])
([nil nil ((#("9" 0 1 (face tree-sitter-hl-face:number fontified t)) . -441) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 442 (t 26292 57182 294039 852000)) nil (26292 57195 260832 14000) 0 nil])
([nil nil ((441 . 443)) nil (26292 57195 260778 260000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -441) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . -442) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 443 (t 26292 57195 258040 237000)) nil (26292 57202 254167 272000) 0 nil])
([nil current ((441 . 442)) nil (26292 57202 254121 275000) 0 nil])
nil
